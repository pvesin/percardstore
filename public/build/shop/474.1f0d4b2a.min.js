"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[474],{1474:(r,e,t)=>{function o(r,e){return function(r){if(Array.isArray(r))return r}(r)||function(r,e){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var o,n,s,i,a=[],l=!0,c=!1;try{if(s=(t=t.call(r)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(o=s.call(t)).done)&&(a.push(o.value),a.length!==e);l=!0);}catch(r){c=!0,n=r}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(c)throw n}}return a}}(r,e)||function(r,e){if(!r)return;if("string"==typeof r)return n(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);"Object"===t&&r.constructor&&(t=r.constructor.name);if("Map"===t||"Set"===t)return Array.from(r);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return n(r,e)}(r,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=r[t];return o}function s(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),t.push.apply(t,o)}return t}function i(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){a(r,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))}))}return r}function a(r,e,t){return(e=function(r){var e=function(r,e){if("object"!=typeof r||null===r)return r;var t=r[Symbol.toPrimitive];if(void 0!==t){var o=t.call(r,e||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(r)}(r,"string");return"symbol"==typeof e?e:String(e)}(e))in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}t.r(e),t.d(e,{checkErrors:()=>f,default:()=>h});const l="Input-has-error",c="d-none",u={errorsContainer:document.querySelector("#form-errors"),response:{}};class h{constructor(r){a(this,"errorsContainer",void 0),a(this,"response",void 0),a(this,"form",void 0),r=i(i({},u),r),this.validateConstructor(r);const e=r,t=e.errorsContainer,o=e.response,n=e.form;this.errorsContainer=t,this.response=o,this.form=n}validateConstructor(r){r.form||new Error("Element `form` passed to CheckFormErrors doesn't exist")}check(){this.init(),this.processErrors()}init(){this.errorsContainer&&this.errorsContainer.classList.remove(c),this.clearErrors()}clearErrors(){this.errorsContainer&&(this.errorsContainer.innerHTML=""),this.form.querySelectorAll(`[name^="${this.getBaseFormName()}"].${l}`).forEach((r=>r.classList.remove(l)))}processErrors(){var r,e,t;const o=document.createElement("ul");this.response.errors||(this.addError(o,Translator.trans("sylius.base_error",{},"validators")),this.response.errors=null),this.response.errors&&this.response.errors.forEach((r=>{this.addError(o,r)}));const n=null!==(r=null===(e=this.response.form)||void 0===e?void 0:e.errors)&&void 0!==r?r:this.response.errors;this.getErrorInputName(null!=n?n:{children:null!==(t=this.response.children)&&void 0!==t?t:{}}).forEach((([r,e])=>{this.addFieldError(`${this.getBaseFormName()}${r}`),e.forEach((r=>{var e;[...null!==(e=this.response.errors)&&void 0!==e?e:[]].includes(r)||this.addError(o,r)}))})),this.errorsContainer&&this.errorsContainer.appendChild(o),this.scrollToErrorContainer()}addError(r,e){const t=document.createElement("li");t.innerText=Translator.trans(e,{},"validators"),r.appendChild(t)}addFieldError(r){const e=this.form.querySelector(`[name="${r}"]`);e&&e.classList.add(l)}getErrorInputName(r,e=[],t=""){var o;return r.errors&&e.push([t,r.errors]),Object.entries(null!==(o=r.children)&&void 0!==o?o:{}).forEach((([r,o])=>{this.getErrorInputName(o,e,`${t}[${r}]`)})),e}getBaseFormName(){return o(this.form.querySelector("input").name.split("["),1)[0]}scrollToErrorContainer(){this.errorsContainer&&(window.location.href=`#${this.errorsContainer.id}`)}}const f=r=>{new h(r).check()}}}]);